apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nats
    spec:
      automountServiceAccountToken: false
      containers:
        - name: nats
          image: nats-streaming:0.17.0
          # Array of arguments to be provided to the primary CMD of the Docker image
          # https://hub.docker.com/_/nats-streaming
          # Section: Commandline Options
          # For example:
          # -st,  --store <string>               Store type: MEMORY|FILE|SQL (default: MEMORY)
          # We wold need to pass the "-st" flag and the <string> value
          # We end with ["-st", "SQL"]
          args: [
              "-p",
              "4222",
              "-m",
              "8222",
              # Interval for which NATS streaming server sends a request to all its clients (publishers and listeners) to see if they are alive
              "-hbi",
              "5s",
              # hbt determines how long each client has to respond
              "-hbt",
              "5s",
              # hbf determines the number of times a client must fail in order for the server to determine it as dead
              "-hbf",
              "2",
              #
              # TODO: Disable Stan debugging in prod?
              #
              "-SD",
              #
              "--store",
              "sql",
              "--sql_driver",
              "postgres",
              "--sql_source",
              "user=postgres password=postgres host=nats-sql-srv port=5432 dbname=nss_db sslmode=disable",
              #
              "-cid",
              "ticketing",
            ]
---
apiVersion: v1
kind: Service
metadata:
  name: nats-srv
spec:
  type: ClusterIP
  selector:
    app: nats
  ports:
    - name: client
      protocol: TCP
      port: 4222
      targetPort: 4222
    - name: monitoring
      protocol: TCP
      port: 8222
      targetPort: 8222
