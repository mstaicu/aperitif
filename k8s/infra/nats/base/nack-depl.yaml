apiVersion: v1
kind: ServiceAccount
metadata:
  name: jetstream-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jetstream-controller-cluster-role
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - jetstream.nats.io
    resources:
      - streams
      - streams/status
      - objectstores
      - objectstores/status
      - keyvalues
      - keyvalues/status
      - consumers
      - consumers/status
      - streamtemplates
      - streamtemplates/status
      - accounts
      - accounts/status
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jetstream-controller-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: jetstream-controller
roleRef:
  kind: ClusterRole
  name: jetstream-controller-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: nack
  labels:
    app: nack
spec:
  selector:
    matchLabels:
      app: nack

  replicas: 1

  template:
    metadata:
      labels:
        app: nack
    spec:
      serviceAccountName: jetstream-controller
      containers:
        - name: jsc
          image: natsio/jetstream-controller:0.19.1
          workingDir: /nack
          command:
            - /jetstream-controller
          args:
            - -s=nats://nats-depl-0.nats-headless.$(POD_NAMESPACE).svc.cluster.local:4222
            - --control-loop
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: runtime
              mountPath: /nack
      volumes:
        - name: runtime
          emptyDir: {}
