apiVersion: batch/v1
kind: Job

metadata:
  name: auth-secrets-manager
spec:
  ttlSecondsAfterFinished: 0 # Automatically delete after 0 seconds
  template:
    spec:
      serviceAccountName: secrets-manager-sa
      initContainers:
        - name: generate-secrets
          image: node:latest
          volumeMounts:
            - name: secrets-volume
              mountPath: /secrets
          command:
            - sh
            - -c
            - |
              node -e "
              const fs = require('fs');
              const { generateKeyPairSync, randomBytes } = require('node:crypto');

              const { privateKey, publicKey } = generateKeyPairSync('rsa', {
                modulusLength: 2048,
                publicKeyEncoding: { type: 'spki', format: 'pem' },
                privateKeyEncoding: { type: 'pkcs8', format: 'pem' }
              });

              fs.writeFileSync('/secrets/access_token_private_key.pem', privateKey);
              fs.writeFileSync('/secrets/access_token_public_key.pem', publicKey);

              const refreshTokenSecret = randomBytes(32).toString('base64');
              fs.writeFileSync('/secrets/refresh_token_secret.txt', refreshTokenSecret);
              "

      containers:
        - name: create-k8s-secret
          image: bitnami/kubectl:latest
          volumeMounts:
            - name: secrets-volume
              mountPath: /secrets
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - sh
            - -c
            - |
              if kubectl get secret auth-secrets -n $NAMESPACE > /dev/null 2>&1; then
                exit 0
              fi

              kubectl create secret generic auth-secrets \
                --from-file=ACCESS_TOKEN_PRIVATE_KEY=/secrets/access_token_private_key.pem \
                --from-file=ACCESS_TOKEN_PUBLIC_KEY=/secrets/access_token_public_key.pem \
                --from-file=REFRESH_TOKEN_SECRET=/secrets/refresh_token_secret.txt \
                -n $NAMESPACE
              echo "âœ… Secret 'auth-secrets' created successfully."

      volumes:
        - name: secrets-volume
          emptyDir: {}

      restartPolicy: OnFailure
