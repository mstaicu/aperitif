apiVersion: apps/v1
kind: Deployment

metadata:
  name: auth-depl
spec:
  replicas: 1
  template:
    spec:
      affinity: null
      serviceAccountName: auth-sa
      initContainers:
        - name: wait-jobs
          image: bitnami/kubectl:latest
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/sh
            - -c
            - |
              kubectl wait --for=condition=complete --timeout=300s job/auth-secrets-job -n "$NAMESPACE" > /dev/null 2>&1
              kubectl wait --for=condition=complete --timeout=300s job/nats-secrets-job -n "$NAMESPACE" > /dev/null 2>&1

        - name: copy-secrets
          image: bitnami/kubectl:latest
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: auth-secrets-volume
              mountPath: /secrets
          command:
            - /bin/sh
            - -c
            - |
              until kubectl get secret nats-auth-creds-secret -n "$NAMESPACE" > /dev/null 2>&1; do
                sleep 2
              done

              kubectl get secret nats-auth-creds-secret -n "$NAMESPACE" -o jsonpath="{.data.auth\.creds}" | base64 -d > /secrets/auth.creds

              chown node:node /secrets/auth.creds
              chmod 600 /secrets/auth.creds

        - name: wait-nats
          image: busybox:latest
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/sh
            - -c
            - |
              for i in 0 1 2; do
                SERVER="http://nats-depl-$i.nats-headless.$NAMESPACE.svc.cluster.local:8222/healthz?js-server-only=true"
                until curl -s -o /dev/null -w "%{http_code}" "$SERVER" | grep 200; do
                  sleep 2
                done
              done

      containers:
        - name: auth
          volumeMounts:
            - name: auth-secrets-volume
              mountPath: /secrets

      volumes:
        - name: auth-secrets-volume
          emptyDir: {}
