apiVersion: batch/v1
kind: Job

metadata:
  name: generate-nats-secrets
spec:
  ttlSecondsAfterFinished: 0 # Automatically delete after 0 seconds
  template:
    spec:
      #
      # This is provided by referencing the secret manager in the overlay kustomization
      # in the components directive
      #
      serviceAccountName: secrets-manager-sa
      initContainers:
        - name: nats-box
          image: natsio/nats-box:latest
          command:
            - sh
            - -c
            - |
              nsc add operator --name tma --sys --generate-signing-key
              nsc edit operator --require-signing-keys
              nsc add account tma_account
              nsc edit account tma_account --sk generate
              nsc add user --account tma_account auth_service

              # Export credentials to shared volume
              nsc generate creds --account tma_account --name auth_service > /secrets/auth_service.creds

              # Export memory resolver for server config
              nsc generate config --mem-resolver --sys-account SYS > /secrets/resolver.conf

          volumeMounts:
            - name: secrets-volume
              mountPath: /secrets

      containers:
        - name: create-k8s-secret
          image: bitnami/kubectl:latest
          env:
            #
            # Kustomize will insert the namespace
            #
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - sh
            - -c
            - |
              if ! kubectl get secret nats-resolver-secret -n $NAMESPACE > /dev/null 2>&1; then
                kubectl create secret generic nats-resolver-secret \
                  --from-file=resolver.conf=/secrets/resolver.conf \
                  -n $NAMESPACE
              fi

              if ! kubectl get secret nats-auth-creds-secret -n $NAMESPACE > /dev/null 2>&1; then
                kubectl create secret generic nats-auth-creds-secret \
                  --from-file=nats-auth-creds=/secrets/auth_service.creds \
                  -n $NAMESPACE
              fi

          volumeMounts:
            - name: secrets-volume
              mountPath: /secrets
      volumes:
        - name: secrets-volume
          emptyDir: {}

      restartPolicy: OnFailure
