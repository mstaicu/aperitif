apiVersion: v1
kind: Namespace

metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  # TODO(ver) Restrict this to the Linkerd namespace. See
  # https://github.com/linkerd/linkerd2/issues/9367
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "nodes"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["workload.linkerd.io"]
    resources: ["externalworkloads"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create", "get", "update", "patch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU1HcCsyQ0lQMlRqUFhHSXo2YWlXQ013RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNalV3TmpFME1USXpOelV4V2hjTk1qWXdOakUwTVRJek56VXhXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUxjdnNPWXhzUmJhR3RuSlVBZ1IvZXZWaEhwUGVxckcrbXkrdU52K1BCbzJQWHBicGxxWApnYm85Z1dEU1o5eE8rUkx6TnB6TW16WGFsMksvSjhJOVdhOGUxUk1mRHlHTEF0Q0h6MlhGRWZ2VDhFZEQzSXhXCkZNVkdSbmxGemhOSFZrMXZURjhEUVU1eU82cnJ0V0M0OE5UMDhmV3RTbkhZKzVyT2xYNjh6T1h5WUdDVEV0clIKRHJKK2I3Vjl6TE5XV2NkeVNCdERmSkZJMGNSNWhhMzBFa05PL3QxUUU3Sy9CNjVPTGdXci90cDRXL1AyUjRTNgptbjJqV3lsMFJtMUpjVVZrMndIYzRGSGZJallMVWFFemxRYnExZVozRjVwV0I0SUNQZ2hra3VnZWprdkZtRzhvCkM1K0RhRXc4b2lIZTdLcHpsY0diT3M5L09uMTIwQStXd0djQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDYnNzbjNYRE0yUmhqcldUM1NyelpYdXZPS1ZtaEl2Q202eVcvUWZDSDQKMkVKaG85SnRLVkZPQy9xaURwYnJZUHhLRWVZZXVsbEVDNGFNYkpVdGFzajY4d0l0T0pPZjdqcXRxYjIvMjBvaApCOWNRQlVMaU1xSTd6S2R1TkxrS25CVDJvSnlzS2R4eGZGMzMrWWg3TkxwbSs4bUh3cmFlTktlcjg2a0FRNGZSCmZHMVdkMFNLWEZhUURmSGJpZGNMTGl6SUVvVjgrSklWaytLdUFkZzRUM1YzQllzRTBhRVhoTGc5RVc3R0dIRVcKQWJQb09scmVNQlhwM3FaR04vL09sdElRSnFSZXNjVTJpclJxaU42Q3dwbGJFcDMzZWNBRDlKNGpSeUkvbS9UawpvMUhxSTBkUlNjSTVnS1NGSUZod1pXT2VNaEo3ZU4rOU5FdDY3UnZhUTJxQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdHkrdzVqR3hGdG9hMmNsUUNCSDk2OVdFZWs5NnFzYjZiTDY0Mi80OEdqWTllbHVtCldwZUJ1ajJCWU5KbjNFNzVFdk0ybk15Yk5kcVhZcjhud2oxWnJ4N1ZFeDhQSVlzQzBJZlBaY1VSKzlQd1IwUGMKakZZVXhVWkdlVVhPRTBkV1RXOU1Yd05CVG5JN3F1dTFZTGp3MVBUeDlhMUtjZGo3bXM2VmZyek01ZkpnWUpNUwoydEVPc241dnRYM01zMVpaeDNKSUcwTjhrVWpSeEhtRnJmUVNRMDcrM1ZBVHNyOEhyazR1QmF2KzJuaGI4L1pICmhMcWFmYU5iS1hSR2JVbHhSV1RiQWR6Z1VkOGlOZ3RSb1RPVkJ1clY1bmNYbWxZSGdnSStDR1NTNkI2T1M4V1kKYnlnTG40Tm9URHlpSWQ3c3FuT1Z3WnM2ejM4NmZYYlFENWJBWndJREFRQUJBb0lCQUNUU3kyYWFtcFNUWjA1YwpMMkJQN1pFWXJMYkJmMUVSQ29vTmxLOTBYYlNQTHJDSDk5ckNGZXZRTFUrL08rMkhXbjQ2c2NHM1I0UDkydXlZCnJHOVpVY3ZvRU1EMVAxOW95RG9POHR2c1QzOGx6V2tsOVJHb3hDZ2J4bExlZTF4WXZMcDRJd3YrWllSVlpqVW4KaUtCV3pPS2lFbmxtU2s2MFpXOXJFNVlVY2NQUExBdFVGSjVwcDNGSmo4V21rRDRUME5OWFVsZnlYZUh6YTU4RwpYOTIxd1hxaXFwb3owYWhVZkhidXcrYnBaRFg3WUc4QksyK05PVTY5aEVoMWRXbUFtZVAxTHhSSGNkUjZzYXFwCm1OQkd2YzZkMkRCTkRuSUV4ZGlVRDhENlVrQWd2VWliYlAwaWswTkVaZUo2eHRGREY3RlBubzZ2UmdoWUI1eVoKQlV2eU5qRUNnWUVBMW9HdU84alFWUFZqT3Awek9wTGZNcFdFY0FPODVTUzFidFQ0R0w5OVVFUmJVNTVxSnBUWAp1cFJ0L21UOVRpeW5oUTJUZWF1bHoxSUoyckpjTnNjRVV3WWo0Q0F1NzVTZWFPSjNhckpEdmx0KzZRaTFKUi9BCit3bVJaV3Y3T3M0Z2I2MER1RXdVdmJZdGw0VDJQNVkyT3k0Vk9wYmRLSWYwRHdXZk5hcWJ2d3NDZ1lFQTJwOEoKaDNkbEU0azkycGhONEZrMDFUVWM5RFNCTzBVNE9BVkZEVDdodW56S3dtNU4rQkxjL0pYVVVQRFZwanlTcGZaVAovUG44a0h4WUNNTmp6M2MwZFFVL1NlZEVDRjdOVlNWL3MrZ2s3UDJDa1V4L1BjYjNUUFdNRlduaTQySUhMN3V5CmtpQU5iWmJMTTkyYjhIQld5WkxzWG9yUmtVSEtYVDNFTmpqWERaVUNnWUF1eE0ySlNXcHE2Nm03OE9SbmcvaFkKSGhObkhObUZtSEJhZnVLcytxdEc0ZkNMbGNHTk1leXJTSXVHNk52MXZIUzE1TlRmdFZZTWt0V0ZNbGc2dFQregpIbWFhQ2twUmdEVGRwMnJqLzRRWHIvbEdzOWhUQk01ZHJhTmUycUZISEFRa2RUT1hiamNqZWVJTTVEZVFlNTdOClhtblFnVzRzMVIrWVd1QndvZ2NkS3dLQmdRQ0lObWpZaDVKcGZxd1VRNnJaNnByWmNKTk9zRndJa3RNNVRFYysKdm53a0ZsYTZsOEZxbkU0bDdqQndFZTM3K21lZ2tmNjRjd1ZpL0taWkoyeEx1a2pyMUU0ZmZNRk51Y3VUanA2bgplQzl4blc0NW00RDMrN3pmcldvUGVYN05ENm5NbXRUaTZLZVZMVXdFVDhJMko3aGJOWGlpV3puQm1FMCtsUnBvCmNqZkRsUUtCZ1FDQm9oNXY0dDNRZEh3T0t2T3BlWjhvUFV6VEIyUFJmOG1abWV1Tk9uUC9mbmpMNGM5QmdXWXEKU0VvWkMvTm4ybk5SUURpVVhDWVhIei9Mb2lQZHBsUzRIcndVdkNuTk8vSkNqbWJjZ3QzKzgzOUpJNEtSQWFmbQppZkhoSmtoOEpLZ0tDYXcyQjdXVk1UdkNGamxWNk5pYjNCT1FJZjBkZ0ZUYy9xeFltbHFVQVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-sp-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-sp-validator
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU1HcCsyQ0lQMlRqUFhHSXo2YWlXQ013RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNalV3TmpFME1USXpOelV4V2hjTk1qWXdOakUwTVRJek56VXhXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUxjdnNPWXhzUmJhR3RuSlVBZ1IvZXZWaEhwUGVxckcrbXkrdU52K1BCbzJQWHBicGxxWApnYm85Z1dEU1o5eE8rUkx6TnB6TW16WGFsMksvSjhJOVdhOGUxUk1mRHlHTEF0Q0h6MlhGRWZ2VDhFZEQzSXhXCkZNVkdSbmxGemhOSFZrMXZURjhEUVU1eU82cnJ0V0M0OE5UMDhmV3RTbkhZKzVyT2xYNjh6T1h5WUdDVEV0clIKRHJKK2I3Vjl6TE5XV2NkeVNCdERmSkZJMGNSNWhhMzBFa05PL3QxUUU3Sy9CNjVPTGdXci90cDRXL1AyUjRTNgptbjJqV3lsMFJtMUpjVVZrMndIYzRGSGZJallMVWFFemxRYnExZVozRjVwV0I0SUNQZ2hra3VnZWprdkZtRzhvCkM1K0RhRXc4b2lIZTdLcHpsY0diT3M5L09uMTIwQStXd0djQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDYnNzbjNYRE0yUmhqcldUM1NyelpYdXZPS1ZtaEl2Q202eVcvUWZDSDQKMkVKaG85SnRLVkZPQy9xaURwYnJZUHhLRWVZZXVsbEVDNGFNYkpVdGFzajY4d0l0T0pPZjdqcXRxYjIvMjBvaApCOWNRQlVMaU1xSTd6S2R1TkxrS25CVDJvSnlzS2R4eGZGMzMrWWg3TkxwbSs4bUh3cmFlTktlcjg2a0FRNGZSCmZHMVdkMFNLWEZhUURmSGJpZGNMTGl6SUVvVjgrSklWaytLdUFkZzRUM1YzQllzRTBhRVhoTGc5RVc3R0dIRVcKQWJQb09scmVNQlhwM3FaR04vL09sdElRSnFSZXNjVTJpclJxaU42Q3dwbGJFcDMzZWNBRDlKNGpSeUkvbS9UawpvMUhxSTBkUlNjSTVnS1NGSUZod1pXT2VNaEo3ZU4rOU5FdDY3UnZhUTJxQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
    failurePolicy: Ignore
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["linkerd.io"]
        apiVersions: ["v1alpha1", "v1alpha2"]
        resources: ["serviceprofiles"]
    sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRRGxGLy9WenMzRkk1a1hSbGVFRmh3VEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVd05qRTBNVEl6TnpVeVdoY05Nall3TmpFME1USXpOelV5V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURqMDdiejlsMHNuNTZKWlcvQUlEUWRucElJbTBvMlp6dFpZQ1RIZE5sVApJZWlSUTg5dVpPSmpXdXI0cC9rVHJtTEliM1YySHNjMUMrYUJKMmFhd3B1MXlhYlo4YkpwMXROd1p0T3gxanhFCmNsb2JlaFJBZVMwTEtrcCt5cUNEV2pVdVJxZ2Q0Y21LRkFPUTY0emR6MlhyWCt2YStqSG0zVUQ4L1VmTU5icGoKdUFlc2pLZUZxU3ZnQTNaRzFOWWgwMGpZZStjMFJPQkRIUHpqbmFrVC83OGY3VjdPTlV1NVVBOHpybDdxUk5TRQp1OXlkRFM4bTJ0a1QwKzJQaUh2OGVNemZ2VHVmK2JyREl1cytZekg4YjBEYUpLajFGOXRUWE9QL3Y4YkpNNEZOCllFNDBZTFZpZzRDUlpzWjN1Rnl6ejRDalpBQUpZU0h3RW5xZjdmRVNiczZWQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDSXpDUzRGWGxRVGNxMGxuYlRhOUx5SnI2SDMKNnBSWDJoR0JGV1lpRmZTakV6UmZiVy8ySUF5SVlaL0RsK0VlVUIydDlmZlhCTm5JcCtLcDAvMWd2Qms4endPUwpuZW1PREN4cFF0ODQyQ21NcnR6cDBGSTkxUFI4RUcwOFdEVnV6NTdJZlMwU1YzeENxdVNnYlpHMkErWjBhOUJLCnZJaHVKK2lKK2RleVA3bDRvNm9qVzZmUzdCUi8xU0VsL2tJS3F3LzM4bDE1b28vUkFyc0FPQUFpSkp4dk9wOFEKdUZ0ZTZleVQwMFdYNkJKSnovM01NRXZHNmt6cHJJeTBxNGt2cWUzTVJDbGJJeDdNSFB1dE5nMHpSSEt1N2J4egpsY0hhdTNGKzJoN2hOV3g3Rjh5cFVjYnpQNU02KzllR0NUYTRzYm92Uk5wZzEyK3YzazRiL3hXZEJjTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNDlPMjgvWmRMSitlaVdWdndDQTBIWjZTQ0p0S05tYzdXV0FreDNUWlV5SG9rVVBQCmJtVGlZMXJxK0tmNUU2NWl5RzkxZGg3SE5Rdm1nU2RtbXNLYnRjbW0yZkd5YWRiVGNHYlRzZFk4UkhKYUczb1UKUUhrdEN5cEtmc3FnZzFvMUxrYW9IZUhKaWhRRGtPdU0zYzlsNjEvcjJ2b3g1dDFBL1AxSHpEVzZZN2dIckl5bgpoYWtyNEFOMlJ0VFdJZE5JMkh2bk5FVGdReHo4NDUycEUvKy9IKzFlempWTHVWQVBNNjVlNmtUVWhMdmNuUTB2Ckp0clpFOVB0ajRoNy9Iak0zNzA3bi9tNnd5THJQbU14L0c5QTJpU285UmZiVTF6ai83L0d5VE9CVFdCT05HQzEKWW9PQWtXYkdkN2hjczgrQW8yUUFDV0VoOEJKNm4rM3hFbTdPbFFJREFRQUJBb0lCQUQzOVZVSjhQazN1QUkwUgo5SjRxSlFRS0tXSCtIdXMrbTM5dUVaUFR6MjQzUTdpQzR1WCt2VHFiZW1PK0VKK3lTMTZPTlQrMmtDMTIxM2s4CjUwWWt2WWx4SE4wZ1RwTk55S3BFMEVVTExjclI4b0tYYlBzOS9XdVVUa0RCa1hzc0NGeFhEVmRVSUNwWjE3Nk8KMlAxaGVUSGFINnF0ZVBhQUxUYXBFK2dVbG1xYkhNOEtMVUZ3bEpZT3k2VFQvOWp5MkxDNkwxVU10VDh6RmN6TApsekEwb0wwdXp3VktsVkhCc3REOTRZbThxRDN5SUxPTmtIeG9GV1BjZnR4R2pBRjFJVTZvbytrVk91T0ZXQjVFCjh1Z214SU9QUW0zUy91UXAycUxHL3Bibm54VXo1eFQvNlNKcGg5RmdOdDRtT05wWG1GSmUrU3JBcDZFS3N1cGoKSWJBemRPRUNnWUVBOFgxY0s3YWFXOW9tUlczdG1YM0NlQ1NjRWVUd2FJb2ZsTkhWT3duK05nMHNYblJFSUlnQgpZV0VhNFJoTFp1ekFUckVkMDA4eW9BaXVRUE50V3NUUG96QnU2OWxkN0N3Rk93Z3U3Y3RTU0xEZEZUd1JQd0d6CjlpOFpVS0FpNUFhU1ZTNjlyUWh0N2JLZ21HUjNRWEFGalJ0V2hGTGtveVpJZk1YODZmOC9jWjhDZ1lFQThZUXgKVnp3VTBDaEZPR0FXSks1ZERVcSszdHA0Ukk3ek9seHFUNHltY2pFeUVXZXpkUHFKd3MwckRvbE01VHJPTlVwNwpNQTV1cUVhNklzZHhDSVpSQ0kyOTZKMjByQi9tREgvQUJZYUpqTnV6cmZOS3BoZmhPUG1nMEhaaWFvOEFqMWpxCjF5bXh2TCttUDQ1TTFlTXhuMUdDV1haOUpuSEgzaFJ0bE1Cclcwc0NnWUVBeVBYem9BVURpM0NNN0xaQVJiMWIKK2pNdEZjOFpLVVhZWmpZQVpuTTRjNjZldjdPdGhnem9hU3N2L1NZRWlaQjNzSVRBTnpydS9ESjlJRnZ6SXRncAptcm9SZEgrZEk0NjJnNXVad2hXelVmNnMzS0R5RVNiUHBnMG4yZXFKWG8wQmRaWENEcDYzTEZtOFAxVkwwTTd5Ckw2MFNZR2ZERU9vbzVIeTJyZHZWNWkwQ2dZRUF5MFYrbmJSa3RCbmd3S1VtbmZMZlFJdXpnQytTWCttTXo0YnUKdDB0aTMrT0dCMTRuallJOHBtYzJJUUx3WkZLTk1nOGhCWDV3SmxONDRFTEtZT2xqbEhadjZ6T28xK0gxSm5uegpMUE5pRzlyaUxMc0REaTQxRWxZUHdzU1E2cXkzUk84S29OTm4wN3ZkK2NvVDQwVllBNFovMWpwQzlUTjRpL0xYCmxBWXJsV2NDZ1lBZXpGQmRBa3hobEwxN1RKVGJIL080ZUNCNFZNck1XYTJSWHlUR0ZLVHlBd0wrTGhraVN5SUUKUkkxaExubEVDQ3VkamQ2eTFNbVdaTEdPTWxPNy9lWEZnS1BaWE9FRU4zalZZSytXQXp6NUZoeFVEcmJZM3pleQphTVkyc1d0ZVpFeFZKYy91MlJicDltNEhtREo3ZDFwaVZCNGQ1aGFKT08vU1czNFhlYUc2dXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-policy-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-policy-validator
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRRGxGLy9WenMzRkk1a1hSbGVFRmh3VEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVd05qRTBNVEl6TnpVeVdoY05Nall3TmpFME1USXpOelV5V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURqMDdiejlsMHNuNTZKWlcvQUlEUWRucElJbTBvMlp6dFpZQ1RIZE5sVApJZWlSUTg5dVpPSmpXdXI0cC9rVHJtTEliM1YySHNjMUMrYUJKMmFhd3B1MXlhYlo4YkpwMXROd1p0T3gxanhFCmNsb2JlaFJBZVMwTEtrcCt5cUNEV2pVdVJxZ2Q0Y21LRkFPUTY0emR6MlhyWCt2YStqSG0zVUQ4L1VmTU5icGoKdUFlc2pLZUZxU3ZnQTNaRzFOWWgwMGpZZStjMFJPQkRIUHpqbmFrVC83OGY3VjdPTlV1NVVBOHpybDdxUk5TRQp1OXlkRFM4bTJ0a1QwKzJQaUh2OGVNemZ2VHVmK2JyREl1cytZekg4YjBEYUpLajFGOXRUWE9QL3Y4YkpNNEZOCllFNDBZTFZpZzRDUlpzWjN1Rnl6ejRDalpBQUpZU0h3RW5xZjdmRVNiczZWQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDSXpDUzRGWGxRVGNxMGxuYlRhOUx5SnI2SDMKNnBSWDJoR0JGV1lpRmZTakV6UmZiVy8ySUF5SVlaL0RsK0VlVUIydDlmZlhCTm5JcCtLcDAvMWd2Qms4endPUwpuZW1PREN4cFF0ODQyQ21NcnR6cDBGSTkxUFI4RUcwOFdEVnV6NTdJZlMwU1YzeENxdVNnYlpHMkErWjBhOUJLCnZJaHVKK2lKK2RleVA3bDRvNm9qVzZmUzdCUi8xU0VsL2tJS3F3LzM4bDE1b28vUkFyc0FPQUFpSkp4dk9wOFEKdUZ0ZTZleVQwMFdYNkJKSnovM01NRXZHNmt6cHJJeTBxNGt2cWUzTVJDbGJJeDdNSFB1dE5nMHpSSEt1N2J4egpsY0hhdTNGKzJoN2hOV3g3Rjh5cFVjYnpQNU02KzllR0NUYTRzYm92Uk5wZzEyK3YzazRiL3hXZEJjTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    failurePolicy: Ignore
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["policy.linkerd.io"]
        apiVersions: ["*"]
        resources:
          - authorizationpolicies
          - httplocalratelimitpolicies
          - httproutes
          - networkauthentications
          - meshtlsauthentications
          - serverauthorizations
          - servers
          - egressnetworks
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["gateway.networking.k8s.io"]
        apiVersions: ["*"]
        resources:
          - httproutes
          - grpcroutes
          - tlsroutes
          - tcproutes
    sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httplocalratelimitpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
      - egressnetworks
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
      - grpcroutes
      - tlsroutes
      - tcproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
      - httplocalratelimitpolicies/status
      - egressnetworks/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
      - grpcroutes/status
      - tlsroutes/status
      - tcproutes/status
    verbs:
      - patch
  - apiGroups:
      - workload.linkerd.io
    resources:
      - externalworkloads
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["list"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["namespaces", "replicationcontrollers"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRQjBCVFZ5UEpDVXk5OHJhWm01MXVQVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkxTURZeE5ERXlNemMxTVZvWERUSTJNRFl4TkRFeU16YzFNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPa3FMMVZSZmkxUVFJOEE1Z0trSlpnOWVrSjlUQUJLMll2TFRpcmlZQWhVNG1jdApwbW5IV1U3UGxyMkI1ZGVRS2JSTFE5Y3kyY0FsTjgrYksydkFlemJPYjc1aTQ0WHdEVUY5aVdEQTRxV3dKUGN0CnYyd000MnprYlFjc0dteng4WnJ1QzN3MTJLOWlaM2dCWld5NWJvbjF2OWUwZWZaa1RtdXRDVjZVUFpqdjlCdlEKNm02UURQYk1QazUrVmNwQ2tGYkt2bnEwUE9Bd3A2MUk0WU9YRHFXUTF0U2lBcGJZaGxXZ0pKQWNETDhiMUpQcgpLamVEek5aVTBGWnZLdnpnWjl5bW56dkhvd2FGVGFVMnF1cG9DaEEzUnZWTk90N3FWZVpjZDdmbzRjVkxtS3BICmRjYkRMMjRaVStJYjZmV2REeEdZbUY5cTN0QjBkd3JHazloNVVoY0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTE5XSnZtdnFJSWlvTGozRXZvZWRGZERmVXpsNzk1OXRhN2YKRGRwWjBobUt1WHl3blVBTzYrS2xvTE1uQWkxUVhUUXI2UzJ4dHY1N2tZUjhOWVJOQXVwaTVQU0NmM0ZhRWNvZgpRVzQ1R3NTS1p4YTBOcEphZHpSVXdMZFI0R3pHTHF0SVUvUUwva2xXd2MzR3h3Z01sbzlqWWcrV0o1bE1ZY2RtCmJza3BuK0RkSlVuNjNEbm9haWk2KzB0cTFHRTNIekNWT1J6L0t2SUJJQWxnZTNxWVRKbnhpOEQrbGxja20xNkIKS0FpNk5qVTFOcWJnUG9vWTdqeml4OFR0MXVqS214SmhQN21Kbk55eFNjYWdoKytmT28ra0laVndFZTJCd0ZILwpqMXlaWjFqYXJtSUxYeDZrRzJiMUEzTmZuU1VkSWhXa3hCeVkrUEVKYS9xUFpRREpsZWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNlNvdlZWRitMVkJBandEbUFxUWxtRDE2UW4xTUFFclppOHRPS3VKZ0NGVGlaeTJtCmFjZFpUcytXdllIbDE1QXB0RXREMXpMWndDVTN6NXNyYThCN05zNXZ2bUxqaGZBTlFYMkpZTURpcGJBazl5Mi8KYkF6amJPUnRCeXdhYlBIeG11NExmRFhZcjJKbmVBRmxiTGx1aWZXLzE3UjU5bVJPYTYwSlhwUTltTy8wRzlEcQpicEFNOXN3K1RuNVZ5a0tRVnNxK2VyUTg0RENuclVqaGc1Y09wWkRXMUtJQ2x0aUdWYUFra0J3TXZ4dlVrK3NxCk40UE0xbFRRVm04cS9PQm4zS2FmTzhlakJvVk5wVGFxNm1nS0VEZEc5VTA2M3VwVjVseDN0K2poeFV1WXFrZDEKeHNNdmJobFQ0aHZwOVowUEVaaVlYMnJlMEhSM0NzYVQySGxTRndJREFRQUJBb0lCQUVoVk1PZnI1eFBSb0tWOApadDZNNDZqTjhaNnMxaVlGRW1YK3hSb2lyaDRIajFEbzVZWk5OSlJ4YTljUWRDZ2liZjJqbDhFcjRrZHNoRnJnClRXRVpEbUJiUEdrNHJsSy92SzBEYjluWEhMaS80MGZYSmxvenlWM2ZvejhsWEhGTndXRUoxZ0JMaUJRb2wrYXYKc0RKQmVGeE9JNXljUFhYRmVscUhETEFObHVwWmRxZW1PNkJlTDZiMmVIY2JnY3R6S01WaCtpSTJEa0JJaVEyTApDeGpBYnVTT1BENnZYcERURC9TYlFwR3JNUnJwd1FYOE42OExDbWVpN0pPV3N5TzErUkowSGdRdEJsb1UyZXNOCnVWZ0dycEdObVc0REdHemhMUDZtSUk2Um5DZWJ6OFQ4WjNHdW9hSW5pdUEyK3hLZ1FWaU82c2ZvSTQ0dnZJbXUKYktkMndra0NnWUVBNzBwNHVWcFZ6TlRxcVNKUVlWOGNQYk9Oanh6QndMcUhaTThhZHNLWVRVeFNWblJReEhLKworTnJUOWxwNXFiNU5RTEZXMDhFcWlKZ0QwRkZqWUpubWpCRTk5UU4vV2ZmWGpiSVV4OEQxVjhScVJvYS9IWnc4CjcrbkE3eXVJQzBwdXNvam1WN3lYUjQyL0NGTjNTQzFEK3M3NVR2VmtVT3RVdXUwWlVMZDdUM01DZ1lFQStYSTAKSnF1NE5FR3ZvRnYzQzBLaFp5cnhJMGJUbmZuN3k0TFQ5cUw3ajd6aFExdTU3UnlQNTJuQ0o4YXVHWXJadkJGMAplUGo5ZDlYVzlhTkV5OVJaZFBEaERDRG1NK08ycldEWStoZ28wR01YMks5ZXdIS3h0TS83T2g1NkF3MHRoS3lECnMzblNBcUxnMWdyekF0ZjdqSXpiNlQzZUtzdUNTdlprTnMyWHdjMENnWUFkRVVYUzlqYy85NGs5M0c0NU5jMS8KYlVVLzRqVmpEUVdQYUYwRm1pUFlGL0pVa0RLVGVvRGFSL0xCbFVIOExhTEN2Z2dYRnZyc3R0S1h4cHMweTkwbQpuSjJUR3Nhb2ppUEFFYWJXa1FqOGpWNS9qTFRBaXc4WDhhUS9LV0dRUlkxbTRKeGlnZ1U2YXV5T3ZWemJCcXlnClZlNFErbHdpUEVRQnBQV1RTWWFRSXdLQmdDY3dRZkV4V1NjY2lyTHV2OGtORnI1V2lMdTZETlRzeVJvWDI2VUwKeGVtM0NzekNSRnR6K1VlcDNjN1I3OWdqY0VHVG5IREU3VTArVXg4VUgyTEdZYWQxa0dXUFpac1JVMG01eFZ6RgpIdVJlTFFqbHhFVUh2OU5nT1YvUUdlc1F6dTNoREcvTjI2aCtYa1JDUkJ0V1F6YTVpbk1DUFQwTDY5UkxFVU5xCjJVU2hBb0dCQU51WTU2cnZkYndPVllvanY2MFQ3SGpGTG1GbktXU3c4ODRaRGZGcVJhZk9pRmxiRFovK0xxZk0KYjF2UDk0TUNyUkxlc29HMGNtcGZ0S0tXblQyWVBadGlpN3hIN0NsQzI5eVUxTlhrbmUwRGtmc0FyUTc1cGxMYwpWK3JPSlVyMGhLZmdQTWdYTEFKejh0TE1JZVM5cjZUZGkrWENHdllucVlWZS9SN3JNSVU5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-proxy-injector.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - kube-system
            - cert-manager
    objectSelector: null
    clientConfig:
      service:
        name: linkerd-proxy-injector
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRQjBCVFZ5UEpDVXk5OHJhWm01MXVQVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkxTURZeE5ERXlNemMxTVZvWERUSTJNRFl4TkRFeU16YzFNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPa3FMMVZSZmkxUVFJOEE1Z0trSlpnOWVrSjlUQUJLMll2TFRpcmlZQWhVNG1jdApwbW5IV1U3UGxyMkI1ZGVRS2JSTFE5Y3kyY0FsTjgrYksydkFlemJPYjc1aTQ0WHdEVUY5aVdEQTRxV3dKUGN0CnYyd000MnprYlFjc0dteng4WnJ1QzN3MTJLOWlaM2dCWld5NWJvbjF2OWUwZWZaa1RtdXRDVjZVUFpqdjlCdlEKNm02UURQYk1QazUrVmNwQ2tGYkt2bnEwUE9Bd3A2MUk0WU9YRHFXUTF0U2lBcGJZaGxXZ0pKQWNETDhiMUpQcgpLamVEek5aVTBGWnZLdnpnWjl5bW56dkhvd2FGVGFVMnF1cG9DaEEzUnZWTk90N3FWZVpjZDdmbzRjVkxtS3BICmRjYkRMMjRaVStJYjZmV2REeEdZbUY5cTN0QjBkd3JHazloNVVoY0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTE5XSnZtdnFJSWlvTGozRXZvZWRGZERmVXpsNzk1OXRhN2YKRGRwWjBobUt1WHl3blVBTzYrS2xvTE1uQWkxUVhUUXI2UzJ4dHY1N2tZUjhOWVJOQXVwaTVQU0NmM0ZhRWNvZgpRVzQ1R3NTS1p4YTBOcEphZHpSVXdMZFI0R3pHTHF0SVUvUUwva2xXd2MzR3h3Z01sbzlqWWcrV0o1bE1ZY2RtCmJza3BuK0RkSlVuNjNEbm9haWk2KzB0cTFHRTNIekNWT1J6L0t2SUJJQWxnZTNxWVRKbnhpOEQrbGxja20xNkIKS0FpNk5qVTFOcWJnUG9vWTdqeml4OFR0MXVqS214SmhQN21Kbk55eFNjYWdoKytmT28ra0laVndFZTJCd0ZILwpqMXlaWjFqYXJtSUxYeDZrRzJiMUEzTmZuU1VkSWhXa3hCeVkrUEVKYS9xUFpRREpsZWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
    failurePolicy: Ignore
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "services"]
        scope: "Namespaced"
    sideEffects: None
    timeoutSeconds: 10
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli edge-25.6.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controller:
      podDisruptionBudget:
        maxUnavailable: 1
    controllerGID: -1
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: edge-25.6.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationController:
      meshedHttp2ClientProtobuf:
        keep_alive:
          interval:
            seconds: 10
          timeout:
            seconds: 3
          while_idle: true
      podAnnotations: {}
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    disableIPv6: true
    egress:
      globalEgressNetworkNamespace: linkerd-egress
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeat: null
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      additionalEnv: null
      experimentalEnv: null
      externalCA: true
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: kubernetes.io/tls
        tls:
          crtPEM: ""
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      podAnnotations: {}
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBjTCCATOgAwIBAgIQd35BekLtspNdzhVCmhzZYzAKBggqhkjOPQQDAjAlMSMw
      IQYDVQQDExpyb290LmxpbmtlcmQuY2x1c3Rlci5sb2NhbDAeFw0yNTA2MTQxMjM0
      MjBaFw0zNTA2MTIxMjM0MjBaMCUxIzAhBgNVBAMTGnJvb3QubGlua2VyZC5jbHVz
      dGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEin1ApRMIzgQi6e7x
      U5WAoWnOsMUPhsQ7nJU226CANekkD75LKaBd3LcaQBKk+DexdvV6NRQpBPmUm6az
      AgYqBqNFMEMwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQEwHQYD
      VR0OBBYEFDIOASiZrvaDoLqzdeMmRi14HKWAMAoGCCqGSM49BAMCA0gAMEUCIGkH
      UovC16FjKVB+ZACPDloJ4gHKwzyrGFA6cAcC/EM7AiEAj1Tn+0YtKpI3dZTwK3AM
      tFH8ySQJ83eLePnQ0t2HwNs=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: edge-25.6.2
    networkValidator:
      connectAddr: ""
      enableSecurityContext: true
      listenAddr: ""
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      - ::/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      additionalEnv: null
      await: true
      capabilities: null
      control:
        streams:
          idleTimeout: 5m
          initialTimeout: 3s
          lifetime: 1h
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      enableShutdownEndpoint: false
      experimentalEnv: null
      gid: -1
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      livenessProbe:
        initialDelaySeconds: 10
        timeoutSeconds: 1
      logFormat: plain
      logHTTPHeaders: "off"
      logLevel: warn,linkerd=info,hickory=error
      metrics:
        hostnameLabels: false
      nativeSidecar: false
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      outboundTransportMode: transport-header
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      readinessProbe:
        initialDelaySeconds: 2
        timeoutSeconds: 1
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      runtime:
        workers:
          minimum: 1
      saMountPath: null
      shutdownGracePeriod: ""
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 0
        periodSeconds: 1
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.4.2
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources: null
      runAsGroup: 65534
      runAsRoot: true
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      additionalEnv: null
      caBundle: ""
      crtPEM: ""
      experimentalEnv: null
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
      podAnnotations: {}
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    revisionHistoryLimit: 10
    spValidator:
      livenessProbe:
        timeoutSeconds: 1
      readinessProbe:
        timeoutSeconds: 1
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###

kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.6.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-25.6.2
        linkerd.io/proxy-version: edge-25.6.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b6ee87ede499c3509a66e29a893ae1e195282196315e4200c98482fb00fed250
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      automountServiceAccountToken: false
      containers:
        - args:
            - identity
            - -log-level=info
            - -log-format=plain
            - -controller-namespace=linkerd
            - -identity-trust-domain=cluster.local
            - -identity-issuance-lifetime=24h0m0s
            - -identity-clock-skew-allowance=20s
            - -identity-scheme=kubernetes.io/tls
            - -enable-pprof=false
            - -kube-apiclient-qps=100
            - -kube-apiclient-burst=200
          env:
            - name: LINKERD_DISABLED
              value: "linkerd-await cannot block the identity controller"
          image: cr.l5d.io/linkerd/controller:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9990
            initialDelaySeconds: 10
          name: identity
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9990
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9990
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/issuer
              name: identity-issuer
            - mountPath: /var/run/linkerd/identity/trust-roots/
              name: trust-roots
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
        - env:
            - name: _pod_name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_uid
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: _pod_ip
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: _pod_containerName
              value: &containerName linkerd-proxy
            - name: LINKERD2_PROXY_CORES
              value: "1"
            - name: LINKERD2_PROXY_CORES_MIN
              value: "1"
            - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
              value: "8080"
            - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
              value: "false"
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
            - name: LINKERD2_PROXY_POLICY_SVC_ADDR
              value: linkerd-policy.linkerd.svc.cluster.local.:8090
            - name: LINKERD2_PROXY_POLICY_WORKLOAD
              value: |
                {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
            - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
              value: all-unauthenticated
            - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
            - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
              value: "5m"
            - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
              value: "1h"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "5s"
            - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "90s"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: "0.0.0.0:4190"
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: "0.0.0.0:4191"
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: "127.0.0.1:4140"
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
              value: "127.0.0.1:4140"
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: "0.0.0.0:4143"
            - name: LINKERD2_PROXY_INBOUND_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
            - name: LINKERD2_PROXY_INBOUND_PORTS
              value: "8080,9990"
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
              value: 30s
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
              value: 30s
            - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
              value: "false"
            - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
              value: "10s"
            - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
              value: "10s"
            - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,587,3306,4444,5432,6379,9300,11211"
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              valueFrom:
                configMapKeyRef:
                  name: linkerd-identity-trust-roots
                  key: ca-bundle.crt
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/tokens/linkerd-identity-token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: localhost.:8080
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_POLICY_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
          image: cr.l5d.io/linkerd/proxy:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
            timeoutSeconds: 1
          name: *containerName
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
            timeoutSeconds: 1
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2102
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
            - mountPath: /var/run/secrets/tokens
              name: linkerd-identity-token
      initContainers:
        - args:
            - --ipv6=false
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191,4567,4568"
            - --outbound-ports-to-ignore
            - "443,6443"
          image: cr.l5d.io/linkerd/proxy-init:v2.4.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
        - name: identity-issuer
          secret:
            secretName: linkerd-identity-issuer
        - configMap:
            name: linkerd-identity-trust-roots
          name: trust-roots
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
        - emptyDir: {}
          name: linkerd-proxy-init-xtables-lock
        - name: linkerd-identity-token
          projected:
            sources:
              - serviceAccountToken:
                  path: linkerd-identity-token
                  expirationSeconds: 86400
                  audience: identity.l5d.io
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: sp-validator
      port: 443
      targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8090
      targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: policy-https
      port: 443
      targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.6.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: f4b4e44c46d044bcbf63689fa0d8980d944c4da6e6de1fee967dc972e0d572b3
        linkerd.io/created-by: linkerd/cli edge-25.6.2
        linkerd.io/proxy-version: edge-25.6.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b6ee87ede499c3509a66e29a893ae1e195282196315e4200c98482fb00fed250
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      automountServiceAccountToken: false
      containers:
        - env:
            - name: _pod_name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_uid
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: _pod_ip
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: _pod_containerName
              value: &containerName linkerd-proxy
            - name: LINKERD2_PROXY_CORES
              value: "1"
            - name: LINKERD2_PROXY_CORES_MIN
              value: "1"
            - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
              value: "false"
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: localhost.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
            - name: LINKERD2_PROXY_POLICY_SVC_ADDR
              value: localhost.:8090
            - name: LINKERD2_PROXY_POLICY_WORKLOAD
              value: |
                {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
            - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
              value: all-unauthenticated
            - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
            - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
              value: "5m"
            - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
              value: "1h"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "5s"
            - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "90s"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: "0.0.0.0:4190"
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: "0.0.0.0:4191"
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: "127.0.0.1:4140"
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
              value: "127.0.0.1:4140"
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: "0.0.0.0:4143"
            - name: LINKERD2_PROXY_INBOUND_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
            - name: LINKERD2_PROXY_INBOUND_PORTS
              value: "8086,8090,8443,9443,9990,9996,9997"
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
              value: 30s
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
              value: 30s
            - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
              value: "false"
            - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
              value: "10s"
            - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
              value: "10s"
            - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,587,3306,4444,5432,6379,9300,11211"
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              valueFrom:
                configMapKeyRef:
                  name: linkerd-identity-trust-roots
                  key: ca-bundle.crt
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/tokens/linkerd-identity-token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_POLICY_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
          image: cr.l5d.io/linkerd/proxy:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
            timeoutSeconds: 1
          name: *containerName
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
            timeoutSeconds: 1
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2102
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          lifecycle:
            postStart:
              exec:
                command:
                  - /usr/lib/linkerd/linkerd-await
                  - --timeout=2m
                  - --port=4191
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
            - mountPath: /var/run/secrets/tokens
              name: linkerd-identity-token
        - args:
            - destination
            - -addr=:8086
            - -controller-namespace=linkerd
            - -outbound-transport-mode=transport-header
            - -enable-h2-upgrade=true
            - -log-level=info
            - -log-format=plain
            - -enable-endpoint-slices=true
            - -cluster-domain=cluster.local
            - -identity-trust-domain=cluster.local
            - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
            - -enable-ipv6=false
            - -enable-pprof=false
            - --meshed-http2-client-params={"keep_alive":{"interval":{"seconds":10},"timeout":{"seconds":3},"while_idle":true}}
          image: cr.l5d.io/linkerd/controller:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9996
            initialDelaySeconds: 10
          name: destination
          ports:
            - containerPort: 8086
              name: grpc
            - containerPort: 9996
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9996
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
        - args:
            - sp-validator
            - -log-level=info
            - -log-format=plain
            - -enable-pprof=false
          image: cr.l5d.io/linkerd/controller:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9997
            initialDelaySeconds: 10
            timeoutSeconds: 1
          name: sp-validator
          ports:
            - containerPort: 8443
              name: sp-validator
            - containerPort: 9997
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9997
            timeoutSeconds: 1
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: sp-tls
              readOnly: true
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
        - args:
            - --admin-addr=0.0.0.0:9990
            - --control-plane-namespace=linkerd
            - --grpc-addr=0.0.0.0:8090
            - --server-addr=0.0.0.0:9443
            - --server-tls-key=/var/run/linkerd/tls/tls.key
            - --server-tls-certs=/var/run/linkerd/tls/tls.crt
            - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
            - --identity-domain=cluster.local
            - --cluster-domain=cluster.local
            - --default-policy=all-unauthenticated
            - --log-level=info
            - --log-format=plain
            - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
            - --global-egress-network-namespace=linkerd-egress
            - --probe-networks=0.0.0.0/0,::/0
          image: cr.l5d.io/linkerd/policy-controller:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: admin-http
            initialDelaySeconds: 10
          name: policy
          ports:
            - containerPort: 8090
              name: grpc
            - containerPort: 9990
              name: admin-http
            - containerPort: 9443
              name: policy-https
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: admin-http
          resources:
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: policy-tls
              readOnly: true
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
      initContainers:
        - args:
            - --ipv6=false
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191,4567,4568"
            - --outbound-ports-to-ignore
            - "443,6443"
          image: cr.l5d.io/linkerd/proxy-init:v2.4.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
        - name: sp-tls
          secret:
            secretName: linkerd-sp-validator-k8s-tls
        - name: policy-tls
          secret:
            secretName: linkerd-policy-validator-k8s-tls
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
        - emptyDir: {}
          name: linkerd-proxy-init-xtables-lock
        - name: linkerd-identity-token
          projected:
            sources:
              - serviceAccountToken:
                  path: linkerd-identity-token
                  expirationSeconds: 86400
                  audience: identity.l5d.io
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.6.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
spec:
  concurrencyPolicy: Replace
  schedule: "47 12 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli edge-25.6.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          automountServiceAccountToken: false
          containers:
            - name: heartbeat
              image: cr.l5d.io/linkerd/controller:edge-25.6.2
              imagePullPolicy: IfNotPresent
              env:
                - name: LINKERD_DISABLED
                  value: "the heartbeat controller does not use the proxy"
              args:
                - "heartbeat"
                - "-controller-namespace=linkerd"
                - "-log-level=info"
                - "-log-format=plain"
                - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
              securityContext:
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 2103
                allowPrivilegeEscalation: false
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                  name: kube-api-access
                  readOnly: true
          volumes:
            - name: kube-api-access
              projected:
                defaultMode: 420
                sources:
                  - serviceAccountToken:
                      expirationSeconds: 3607
                      path: token
                  - configMap:
                      items:
                        - key: ca.crt
                          path: ca.crt
                      name: kube-root-ca.crt
                  - downwardAPI:
                      items:
                        - fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                          path: namespace
---
###
### Proxy Injector
###

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.6.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: e3fc6c56bc55750e4d2d66176033389130e3eeb00ece90960682ce7d570d3d5a
        linkerd.io/created-by: linkerd/cli edge-25.6.2
        linkerd.io/proxy-version: edge-25.6.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b6ee87ede499c3509a66e29a893ae1e195282196315e4200c98482fb00fed250
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      automountServiceAccountToken: false
      containers:
        - env:
            - name: _pod_name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_uid
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: _pod_ip
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: _pod_containerName
              value: &containerName linkerd-proxy
            - name: LINKERD2_PROXY_CORES
              value: "1"
            - name: LINKERD2_PROXY_CORES_MIN
              value: "1"
            - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
              value: "false"
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
            - name: LINKERD2_PROXY_POLICY_SVC_ADDR
              value: linkerd-policy.linkerd.svc.cluster.local.:8090
            - name: LINKERD2_PROXY_POLICY_WORKLOAD
              value: |
                {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
            - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
              value: all-unauthenticated
            - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
            - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
              value: "5m"
            - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
              value: "1h"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "5s"
            - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "90s"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: "0.0.0.0:4190"
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: "0.0.0.0:4191"
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: "127.0.0.1:4140"
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
              value: "127.0.0.1:4140"
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: "0.0.0.0:4143"
            - name: LINKERD2_PROXY_INBOUND_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
            - name: LINKERD2_PROXY_INBOUND_PORTS
              value: "8443,9995"
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
              value: 30s
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
              value: 30s
            - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
              value: "false"
            - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
              value: "10s"
            - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
              value: "10s"
            - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
              value: "3s"
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,587,3306,4444,5432,6379,9300,11211"
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              valueFrom:
                configMapKeyRef:
                  name: linkerd-identity-trust-roots
                  key: ca-bundle.crt
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/tokens/linkerd-identity-token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_POLICY_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
          image: cr.l5d.io/linkerd/proxy:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
            timeoutSeconds: 1
          name: *containerName
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
            timeoutSeconds: 1
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2102
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          lifecycle:
            postStart:
              exec:
                command:
                  - /usr/lib/linkerd/linkerd-await
                  - --timeout=2m
                  - --port=4191
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
            - mountPath: /var/run/secrets/tokens
              name: linkerd-identity-token
        - args:
            - proxy-injector
            - -log-level=info
            - -log-format=plain
            - -linkerd-namespace=linkerd
            - -enable-pprof=false
          image: cr.l5d.io/linkerd/controller:edge-25.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: proxy-injector
          ports:
            - containerPort: 8443
              name: proxy-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/identity/trust-roots
              name: trust-roots
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
      initContainers:
        - args:
            - --ipv6=false
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191,4567,4568"
            - --outbound-ports-to-ignore
            - "443,6443"
          image: cr.l5d.io/linkerd/proxy-init:v2.4.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - configMap:
            name: linkerd-identity-trust-roots
          name: trust-roots
        - name: tls
          secret:
            secretName: linkerd-proxy-injector-k8s-tls
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
        - emptyDir: {}
          name: linkerd-proxy-init-xtables-lock
        - name: linkerd-identity-token
          projected:
            sources:
              - serviceAccountToken:
                  path: linkerd-identity-token
                  expirationSeconds: 86400
                  audience: identity.l5d.io
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.6.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
    - name: proxy-injector
      port: 443
      targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgZXh0ZXJuYWxDQTogdHJ1ZQogIGlzc3VlcjoKICAgIHNjaGVtZToga3ViZXJuZXRlcy5pby90bHMKaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCalRDQ0FUT2dBd0lCQWdJUWQzNUJla0x0c3BOZHpoVkNtaHpaWXpBS0JnZ3Foa2pPUFFRREFqQWxNU013CiAgSVFZRFZRUURFeHB5YjI5MExteHBibXRsY21RdVkyeDFjM1JsY2k1c2IyTmhiREFlRncweU5UQTJNVFF4TWpNMAogIE1qQmFGdzB6TlRBMk1USXhNak0wTWpCYU1DVXhJekFoQmdOVkJBTVRHbkp2YjNRdWJHbHVhMlZ5WkM1amJIVnoKICBkR1Z5TG14dlkyRnNNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVpbjFBcFJNSXpnUWk2ZTd4CiAgVTVXQW9Xbk9zTVVQaHNRN25KVTIyNkNBTmVra0Q3NUxLYUJkM0xjYVFCS2srRGV4ZHZWNk5SUXBCUG1VbTZhegogIEFnWXFCcU5GTUVNd0RnWURWUjBQQVFIL0JBUURBZ0VHTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFFd0hRWUQKICBWUjBPQkJZRUZESU9BU2lacnZhRG9McXpkZU1tUmkxNEhLV0FNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJR2tICiAgVW92QzE2RmpLVkIrWkFDUERsb0o0Z0hLd3p5ckdGQTZjQWNDL0VNN0FpRUFqMVRuKzBZdEtwSTNkWlR3SzNBTQogIHRGSDh5U1FKODNlTGVQblEwdDJId05zPQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHlJbml0OgogIHJ1bkFzUm9vdDogdHJ1ZQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
