name: ephemeral environments

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: ephemeral-prs # This needs to be created before
      K8S_NAMESPACE: ephemeral-${{ github.event.pull_request.number }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Configure kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_NAME }}

      - name: Login to Docker Registry
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Images
        run: |
          skaffold build -p ephemeral \
            --build-env PR_NUMBER=${{ github.event.pull_request.number }}

      - name: Create Namespace
        run: |
          kubectl create namespace ${{ env.K8S_NAMESPACE }} || echo "Namespace already exists"

      - name: Deploy Ephemeral Environment
        # Setting the --namespace CLI flag will set the namespace to all the resources in the overlay
        run: |
          skaffold deploy -p ephemeral \
            --namespace=${{ env.K8S_NAMESPACE }} \
            --build-env PR_NUMBER=${{ github.event.pull_request.number }}

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: ephemeral-prs # This needs to be created before
      K8S_NAMESPACE: ephemeral-${{ github.event.pull_request.number }}

    steps:
      - name: Authenticate with DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Configure kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_NAME }}

      - name: Cleanup Resources
        run: kubectl delete namespace ${{ env.K8S_NAMESPACE }}
