version: "2.4"

services:
  traefik:
    image: traefik:1.7-alpine
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8080:8080"
    command:
      - --docker
      - --docker.domain=traefik
      - --docker.watch
      - --api
      - --defaultentrypoints=http,https
    labels:
      - traefik.port=8080
      - traefik.frontend.rule=Host:traefik.localhost
  api:
    build:
      context: ./express
      target: dev
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      # TODO: curl might not be available in Alpine Linux
      # TODO: add healthcheck endpoint in express
      test: curl -f http://127.0.0.1
    volumes:
      - ./express:/home/node/api
      # This is needed because the host node modules are built
      # for the host operating system architecture
      # and our development environment's architecture is based on Debian
      #
      # Hide the host node_modules by creating an anonymous volume
      # at the location of the bind mounted node modules
      #
      # This will allow us to either run the development environment
      # with or without Docker
      - /home/node/api/node_modules
    ports:
      - "3000:3000"
      # This port is used by the API's debugger
      - "9229:9229"
    environment:
      - SIGNATURE=supersecret
    labels:
      - traefik.port=3000
      - traefik.frontend.rule=Host:api.localhost
  postgres:
    image: postgres
    environment:
      # TODO: Add env vars for user, pass and db
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
    labels:
      - traefik.port=3000
      - traefik.frontend.rule=Host:postgres.localhost
