version: "3.1"

services:

  traefik:
    ports:
      - 80:80
      - 443:443
    deploy:
      placement:
        constraints:
          - node.labels.traefik-certificates == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
        - traefik.http.routers.api.entrypoints=websecure
        - traefik.http.routers.traefik.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.routers.traefik.middlewares=admin-auth
        - traefik.http.services.traefik.loadbalancer.server.port=8080
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `public`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode
      - --entryPoints.web.address=:80
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certResolver=le
      - --certificatesresolvers.le.acme.email=${EMAIL?Variable not set}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/certificates
    networks:
      - public

  api:
    secrets:
      - api_env
    environment:
      - API_ENV_FILE=/run/secrets/api_env
    deploy:
      labels:
      - traefik.enable=true
      - traefik.docker.network=public
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.rule=Host(`${DOMAIN?Variable not set}`) && PathPrefix(`/api`)
      - traefik.http.routers.api.middlewares=api-stripprefix
      - traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api
      - traefik.http.services.api-service.loadbalancer.server.port=3000
    networks:
      - public

  postgres:
    secrets:
      - psql_user
      - psql_password
    environment:
      - POSTGRES_USER_FILE=/run/secrets/psql_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/psql_password
    networks:
      - public

network
  public:
    external: true

volume
  traefik-certificates:

secrets:
  api_env:
    external: true
  psql_user:
    external: true
  psql_password:
    external: true
